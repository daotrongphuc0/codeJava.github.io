:root {
    --primary-color: #466082;
    --while-color: #ffff;
    --black-color: #000;
    --text-color: #333333;
    --border-color: #cccccc;
    --header-height: 120px;
    --nav-height: 34px;
    --header-with-seach-height: var(--header-heigh) - var(--nav-height);
}

* {
    box-sizing: inherit;
}

body {
    font-size: 1.4rem;
    line-height: 1.6rem;
    color: #333;
    background-color: #fff;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    /* font-family: Arial, Helvetica, sans-serif; */
}

html {
    font-size: 62.5%;
    line-height: 1.6rem;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    /* font-family: Helvetica Neue, Helvetica, Arial, 文泉驛正黑, WenQuanYi Zen Hei, Hiragino Sans GB, 儷黑 Pro, LiHei Pro, Heiti TC, 微軟正黑體, Microsoft JhengHei UI, Microsoft JhengHei, sans-serif; */
}

p {
    font-size: 1.6rem;
}

.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}


/* @media only screen and (max-width: 700px) {
    .grid {
        width: 100%;
    }
} */

.grid__full-width {
    width: 100%;
}

.grid__row {
    display: flex;
    flex-wrap: wrap;
    /* margin-left: -5px;
    margin-right: -5px; */
    /* flex-direction: column; */
}

.grid__column-2 {
    display: flex;
    padding-left: 5px;
    padding-right: 5px;
    width: 25%;
    flex-direction: column;
    align-items: flex-end;
}

@media only screen and (max-width: 700px) {
    .grid__column-2 {
        width: 100%;
    }
}


/* .grid__column-21 {
    padding-left: 5px;
    padding-right: 6px;
    width: 15.75vw;
    position: absolute;
    z-index: 20000;
    margin-top: 10px;
    margin-left: -17px;
    display: none;
} */

@media only screen and (max-width: 700px) {
    .grid__column-2-1 {
        padding-left: 5px;
        /* padding-right: 6px; */
        width: 100%;
        position: absolute;
        z-index: 20;
        top: 35px;
        left: -35px;
        display: none;
        transform-origin: left;
        animation: grownIn 0.2s ease-in-out;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-2-1 {
        padding-left: 5px;
        padding-right: 6px;
        width: 24%;
        position: absolute;
        z-index: 20;
        top: 40px;
        left: 8px;
        display: none;
    }
}

.grid__column-10 {
    display: flex;
    padding-left: 5px;
    padding-right: 5px;
    /* width: 75%; */
}

@media only screen and (max-width: 700px) {
    .grid__column-10 {
        width: 100%;
        /* position: relative; */
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-10 {
        width: 75%;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-10 {
        order: 2;
    }
}

.grid__column-4 {
    padding-left: 5px;
    padding-right: 5px;
    width: 33.3333%;
    position: relative;
}

@media only screen and (max-width: 700px) {
    .grid__column-4 {
        width: 100%;
        padding: 0 10px 10px 10px;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-4 {
        width: 33.3333%;
    }
}

@media only screen and (max-width: 700px) {
    .grid__column-2-5 {
        padding-left: 3px;
        padding-right: 3px;
        width: 50%;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-2-5 {
        padding-left: 3px;
        padding-right: 3px;
        width: 25%;
    }
}


/* .grid__column-2-5-nth {
    padding-left: 3px;
    padding-right: 3px;
    width: 30%;
    margin-left: 10px;
} */

@media only screen and (max-width: 700px) {
    .grid__column-2-5-nth:nth-child(4) {
        display: none;
    }
    .grid__column-2-5-nth {
        padding-left: 3px;
        padding-right: 3px;
        width: 30%;
        margin-left: 10px;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-2-5-nth {
        padding-left: 3px;
        padding-right: 3px;
        width: 25%;
    }
}


/* .grid__column-2-5 {
    padding-left: 5px;
    padding-right: 5px;
    width: 20%;
} */

.grid__column-5 {
    padding-left: 5px;
    padding-right: 5px;
}

@media only screen and (max-width: 700px) {
    .grid__column-5 {
        width: 100%;
    }
}

@media only screen and (min-width: 701px) and (max-width: 2000px) {
    .grid__column-5 {
        width: 41.6667%;
    }
}

.grid__column-3 {
    padding-left: 5px;
    padding-right: 5px;
    width: 25%;
}


/* fadeIn tên keyFrame  */


/* opacity độ trong xuốt */

@keyframes fadeIn {
    from {
        width: 0px;
    }
    to {
        width: 100px;
    }
}


/* giúp nó lớn dần lên */

@keyframes grownIn {
    from {
        transform: scale(0);
    }
    to {
        transform: scale(1);
    }
}


/* hiển thị từ nhỏ -> lớn */

.modal {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    display: flex;
    animation: fadeIn ease-in 0.2s;
}

.modal__overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 2;
}

.modal_black {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: none;
    z-index: 2;
}


/* chỉ số cao hơn đứng trên z-index */

.modal__body {
    background-color: var(--while_color);
    z-index: 4;
    position: relative;
    margin: auto;
    border-radius: 5px;
    animation: growth linear 0.2s;
    /* display: none; */
}

@keyframes growth {
    from {
        transform: scale(0.7);
    }
    to {
        transform: scale(1);
    }
}


/* border style : viền của border */


/* relataive định dạng gốc tại đâu */


/* nút dùng chung để file base  */

.btn--nomal:hover {
    background-color: rgba(0, 0, 0, 0.3);
}

.btn {
    min-width: 142px;
    height: 38px;
    text-decoration: none;
    border: none;
    border-radius: 3px;
    font-size: 1.5rem;
    padding: 0;
    outline: none;
    cursor: pointer;
    color: var(--text_color);
    display: flex;
    justify-content: center;
    align-items: center;
    display: inline-flex;
}

.sticky {
    position: fixed;
    top: 0;
}

img {
    vertical-align: 0;
}